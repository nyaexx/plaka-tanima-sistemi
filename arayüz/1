import tkinter as tk
from tkinter import filedialog

root = tk.Tk()
root.title("Gelişmiş Program Arayüzü")
root.geometry("800x500")
root.configure(bg="#2b2b2b")

# Seçilen dosya yolu bak unutma buraya yol yazmassan çalışmaz.
selected_file = "C:\\Users\\Administrator\\Desktop\\plakalar\\plaka.txt"
current_page = None  
previous_content = []

DOSYA_YOLU = "C:\\Users\\Administrator\\Desktop\\plakalar\\plaka.txt"

def read_plate_data(filename):
    try:
        with open(DOSYA_YOLU, "r", encoding="utf-8") as file:
            plate_data = file.readlines()
            print(f"Dosya açıldı: {filename}")  
            
            return plate_data
    except FileNotFoundError:
        print("Dosya bulunamadı!")
        return ["Plaka verisi bulunamadı."]
    except Exception as e:
        print(f"Dosya okunurken hata oluştu: {e}")
        return ["Dosya okunurken hata oluştu."]

# Liste kutusunu güncelleme
def update_plate_list():
    global previous_content
    if selected_file and current_page == "Plakalar":  # Sadece Plakalar sayfasında listeyi güncelle
        plate_data = read_plate_data(selected_file)
    
        print("Güncel Veri:", plate_data)  # Hata ayıklama için
        print("Önceki Veri:", previous_content)  # Hata ayıklama için

# txt dosyasındaki veri değişince liste kutusunun güncellenmesi için
        if plate_data != previous_content: 
          listbox.delete(0, tk.END)  # Önceki içerikleri temizle
          for plate in plate_data:
            listbox.insert(tk.END, plate.strip())
            previous_content = plate_data

def load_data():
    try:
        with open('C:\\Users\\Administrator\\Desktop\\plakalar\\plaka.txt', 'r') as file:
            lines = file.readlines()
            listbox.delete(0, tk.END)  # Mevcut verileri temizle
            for line in lines:
                listbox.insert(tk.END, line.strip())  # Yeni verileri ekle
    except Exception as e:
        print(f"Veri yüklenirken hata oluştu: {e}")

def show_plakalar_page():
    load_data()  # Plakalar sayfasına geçmeden önce verileri yükle
    # Diğer sayfa içeriklerini güncelle

# plaka listesinin sürekli güncellenmesi için gereken komut           
    root.after(3000, update_plate_list)

# Yan Menü (Sidebar)
sidebar = tk.Frame(root, bg="#333", width=200, height=500)
sidebar.pack(side="left", fill="y")

# İçerik Alanı
content_frame = tk.Frame(root, bg="#444", width=600, height=500)
content_frame.pack(side="right", fill="both", expand=True)

# Sayfa değiştirme
def switch_page(page_name):
    global listbox, scrollbar, listbox_frame, current_page  
    current_page = page_name  # Sayfa adını takip et

    for widget in content_frame.winfo_children():
        widget.destroy()
    
    label = tk.Label(content_frame, text=page_name, font=("Arial", 20), fg="white", bg="#444")
    label.pack(pady=10)
    
    if page_name == "Plakalar":

        # Yeni liste çerçevesi oluştur
        listbox_frame = tk.Frame(content_frame, bg="#444")
        listbox_frame.pack(pady=10)

        # Yeni liste ve scrollbar oluştur
        scrollbar = tk.Scrollbar(listbox_frame, orient=tk.VERTICAL)
        listbox = tk.Listbox(listbox_frame, font=("Arial", 14), bg="#555", fg="white", width=50, height=15, yscrollcommand=scrollbar.set)
        scrollbar.config(command=listbox.yview)

        listbox.pack(side=tk.LEFT, fill=tk.BOTH)
        scrollbar.pack(side=tk.RIGHT, fill=tk.Y)

        # Seçili dosya varsa listeyi güncelle
        update_plate_list()

# Sidebar Butonları
buttons = [
    ("Ana Sayfa", lambda: switch_page("Ana Sayfa")),
    ("Plakalar", lambda: switch_page("Plakalar")),
    ("Hakkında", lambda: switch_page("Hakkında"))
]

for text, command in buttons:
    btn = tk.Button(sidebar, text=text, font=("Arial", 14), bg="#555", fg="white", padx=10, pady=5, relief="flat", command=command)
    btn.pack(pady=10, fill="x")

# İlk sayfa açılışı
switch_page("Ana Sayfa")

# Ana döngüyü başlat
root.mainloop()
