import tkinter as tk
from tkinter import filedialog, messagebox, simpledialog

root = tk.Tk()
root.title("Gelişmiş Program Arayüzü")
root.geometry("800x500")
root.configure(bg="#2b2b2b")

# Seçilen dosya yolu
DOSYA_YOLU = "C:\\Users\\Administrator\\Desktop\\plakalar\\plaka.txt"
current_page = None  
previous_content = []

# Global bileşenler
listbox_frame = None
listbox = None
scrollbar = None

def read_plate_data():
    try:
        with open(DOSYA_YOLU, "r", encoding="utf-8") as file:
            plate_data = file.readlines()
            print(f"Dosya açıldı: {DOSYA_YOLU}")  
            return plate_data
    except FileNotFoundError:
        print("Dosya bulunamadı!")
        return ["Plaka verisi bulunamadı."]
    except Exception as e:
        print(f"Dosya okunurken hata oluştu: {e}")
        return ["Dosya okunurken hata oluştu."]

def update_plate_list():
    global previous_content
    if current_page == "Plakalar":  # Sadece Plakalar sayfasında listeyi güncelle
        plate_data = read_plate_data()
    
        print("Güncel Veri:", plate_data)  # Hata ayıklama için
        print("Önceki Veri:", previous_content)  # Hata ayıklama için
        
        listbox.delete(0, tk.END)  # Önceki içerikleri temizle
        for plate in plate_data:
            listbox.insert(tk.END, plate.strip())
        previous_content = plate_data
        
        # Sürekli güncelleme için
        root.after(3000, update_plate_list)

def add_plate():
    # Kullanıcıdan plaka bilgisi al
    new_plate = simpledialog.askstring("Plaka Ekle", "Yeni plakayı girin:")
    if new_plate:  # Eğer kullanıcı bir şey girdiyse
        try:
            # Dosyaya yeni plakayı ekle
            with open(DOSYA_YOLU, "a", encoding="utf-8") as file:
                file.write(f"{new_plate}\n")
            # Listbox'ı güncelle
            update_plate_list()
            messagebox.showinfo("Başarılı", "Plaka başarıyla eklendi!")
        except Exception as e:
            messagebox.showerror("Hata", f"Plaka eklenirken hata oluştu: {e}")

def delete_plate():
    # Seçili plakayı al
    selected_plate = listbox.get(tk.ACTIVE)
    if selected_plate:  # Eğer bir plaka seçildiyse
        # Onay mesajı göster
        confirm = messagebox.askyesno("Plaka Sil", f"'{selected_plate}' plakasını silmek istediğinize emin misiniz?")
        if confirm:  # Eğer kullanıcı onaylarsa
            try:
                # Dosyadan seçili plakayı sil
                with open(DOSYA_YOLU, "r", encoding="utf-8") as file:
                    lines = file.readlines()
                with open(DOSYA_YOLU, "w", encoding="utf-8") as file:
                    for line in lines:
                        if line.strip() != selected_plate:  # Seçili plakayı atla
                            file.write(line)
                # Listbox'ı güncelle
                update_plate_list()
                messagebox.showinfo("Başarılı", "Plaka başarıyla silindi!")
            except Exception as e:
                messagebox.showerror("Hata", f"Plaka silinirken hata oluştu: {e}")
    else:
        messagebox.showwarning("Uyarı", "Lütfen bir plaka seçin!")

# Yan Menü (Sidebar)
sidebar = tk.Frame(root, bg="#333", width=200, height=500)
sidebar.pack(side="left", fill="y")

# İçerik Alanı
content_frame = tk.Frame(root, bg="#444", width=600, height=500)
content_frame.pack(side="right", fill="both", expand=True)

# Sayfa değiştirme
def switch_page(page_name):
    global listbox, scrollbar, listbox_frame, current_page  
    current_page = page_name  # Sayfa adını takip et

    # İçerik alanını temizle
    for widget in content_frame.winfo_children():
        if widget not in [listbox_frame]:  # listbox_frame'i silme
            widget.destroy()
    
    # Sayfa başlığını oluştur
    label = tk.Label(content_frame, text=page_name, font=("Arial", 20), fg="white", bg="#444")
    label.pack(pady=10)
    
    if page_name == "Plakalar":
        # listbox_frame ve bileşenleri daha önce oluşturulmamışsa oluştur
        
        if listbox_frame is None:
            listbox_frame = tk.Frame(content_frame, bg="#444")
            listbox_frame.pack(pady=10)

            # Butonlar için bir frame oluştur
            button_frame = tk.Frame(listbox_frame, bg="#444")
            button_frame.pack(side=tk.LEFT, fill=tk.Y, padx=10)

            # Plaka Ekle butonu
            add_button = tk.Button(button_frame, text="Plaka Ekle", font=("Arial", 12), bg="#666", fg="white", command=add_plate)
            add_button.pack(pady=5, fill=tk.X)

            # Plaka Sil butonu
            delete_button = tk.Button(button_frame, text="Plaka Sil", font=("Arial", 12), bg="#666", fg="white", command=delete_plate)
            delete_button.pack(pady=5, fill=tk.X)

            scrollbar = tk.Scrollbar(listbox_frame, orient=tk.VERTICAL)
            listbox = tk.Listbox(listbox_frame, font=("Arial", 14), bg="#555", fg="white", width=50, height=15, yscrollcommand=scrollbar.set)
            scrollbar.config(command=listbox.yview)

            listbox.pack(side=tk.LEFT, fill=tk.BOTH)
            scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
        
        # listbox_frame'i göster
        listbox_frame.pack(pady=10)

        # Seçili dosya varsa listeyi güncelle
        update_plate_list()
    else:
        # Diğer sayfalarda listbox_frame'i gizle
        if listbox_frame:
            listbox_frame.pack_forget()

# Sidebar Butonları
buttons = [
    ("Ana Sayfa", lambda: switch_page("Ana Sayfa")),
    ("Plakalar", lambda: switch_page("Plakalar")),
    ("Hakkında", lambda: switch_page("Hakkında"))
]

for text, command in buttons:
    btn = tk.Button(sidebar, text=text, font=("Arial", 14), bg="#555", fg="white", padx=10, pady=5, relief="flat", command=command)
    btn.pack(pady=10, fill="x")

# İlk sayfa açılışı
switch_page("Ana Sayfa")

# Ana döngüyü başlat
root.mainloop()
